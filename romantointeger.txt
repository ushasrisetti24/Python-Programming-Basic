ROMAN TO INTEGER:


class Solution:
    def romanToInt(self, s: str) -> int:
        symVal = {'I':1,'V':5,'X':10,'L':50,'C':100,'D':500,'M':1000}
        prevVal = 0
        output = 0
        for ch in s[::-1]:
            currVal = symVal[ch]
            if currVal >= prevVal:
                output += currVal
            else:
                output -=currVal
            prevVal = currVal
        return output



Conversion Rule: When the symbol has a equal or greater value than the symbol after it, add the symbols (VI = V + I = 5 + 1 = 6). When the symbol has a lesser value than the symbol after it, subtract the symbols (IV = V - I = 5 - 1 = 4)
Logic Used: Traverse from right to left, compare the value of the symbol with previous symbol's value and subtract/add accordingly.


class Solution:
    def romanToInt(self, s: str) -> int:
        intValue = 0
        dict ={'I':1, 'V':5, 'X':10, 'L':50, 'C':100, 'D':500, 'M':1000, 'IV':4, 'IX':9}
        for i in range(len(s)):
            if i < len(s)-1 and dict[s[i+1]] > dict[s[i]]:
                intValue -= dict[s[i]]
            else:
                intValue += dict[s[i]]
        return intValue
		